<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.multi.book.IBookDAO">
  		<resultMap  id="bookResult" type="com.multi.book.BookVO">
  			<result property="bookNo" column="bookNo" />
  			<result property="bookName" column="bookName" />
  			<result property="bookPrice" column="bookPrice" />
  			<result property="bookPub" column="bookPub" />
  			<result property="bookStock" column="bookStock" />	
  		</resultMap> 
  
  		<!-- 전체 상품 조회 -->
  		<select id="listAllBook" resultMap="bookResult">
  			SELECT * FROM book ORDER BY bookNo
  		</select>  
  		
  		<!-- 상품 등록  -->
  		<insert id="insertBook" parameterType="com.multi.book.BookVO">
  			INSERT INTO book (bookNo, bookName, bookPrice, bookPub, bookStock)
  			VALUES (#{bookNo}, #{bookName}, #{bookPrice}, #{bookPub}, #{bookStock})
  		</insert>
  		
  		<!-- 상품 상세 정보 조회  -->
  		<select id="detailViewBook" parameterType="string" 
  														  resultType="com.multi.book.BookVO">
  			SELECT * FROM book WHERE bookNo=#{bookNo}  		
  		</select>
  		
  		<!-- 상품 정보 수정 : 수정된 정보 DB에 저장 (상품번호는 수정 안 함 : 기본키 변경 안 함) -->
  		<update id="updateBook" parameterType="com.multi.book.BookVO">
  			UPDATE book SET bookName=#{bookName}, bookPrice=#{bookPrice}, 
  						  bookPub=#{bookPub}, bookStock=#{bookStock} 
  			WHERE bookNo=#{bookNo}
  		</update>
  		
  		<!-- 상품 정보 삭제  -->
  		<delete id="deleteBook"  parameterType="string">
  			DELETE FROM book WHERE bookNo=#{bookNo}
  		</delete>
  		
  		<!-- 도서 중복 검색하기 -->
  		<select id="bookNoCheck" parameterType="string" resultType="string">
  			SELECT bookNo FROM book WHERE bookNo=#{bookNo}  		
  		</select>
  		
  		<!-- 도서목록 검색하기 -->
  		<select id="bookSearch" parameterType="hashmap" resultMap="bookResult">
  			SELECT * FROM book WHERE
  			<choose>
  				<when test="type != null and type.equals('bookName')">
  					bookName LIKE CONCAT('%', #{keyword}, '%')
  				</when>
  				
  				<when test="type != null and type.equals('bookPub')">
  					bookPub LIKE CONCAT('%', #{keyword}, '%')
  				</when>
  			</choose>
  		</select>
  		<!--  bookNoCheck ArrayList<BookVO> bookSearch(HashMap<String, Object> map)
  			ArrayList<BookVO> listAllBook();   		// 전체 상품 조회
	void insertBook(BookVO bookVo);			// 상품 정보 등록
	void updateBook(BookVO bookVo);			// 상품 정보 수정
	void deleteBook(String bookNo);					// 상품 정보 삭제
	BookVO detailViewBook(String bookNo);// 상세 상품 조회
  		 -->
  </mapper>